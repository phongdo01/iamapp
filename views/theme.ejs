<div>
  <h2>Themes Table</h2>
  <p>
    Type something in the input field to search the table for category, content:
  </p>
  <div class="form-inline">
    <input
      id="myThemeInput"
      type="text"
      class="col-md-3 form-control"
      placeholder="Search.."
    />
    <button
      type="button"
      class="btn btn-primary ml-5"
      style="margin-left: 1%"
      data-toggle="modal"
      data-target="#myThemeModal"
      onclick="openThemeModal()"
    >
      Add
    </button>
  </div>
  <br /><br />

  <table>
    <thead>
      <tr>
        <th colspan="1"></th>
        <th colspan="1">Color</th>
        <th colspan="1">Font name</th>
        <th colspan="1">Font size</th>
        <th colspan="1">Back ground</th>
        <th colspan="1">Image</th>
      </tr>
    </thead>
    <tbody id="myThemeTable"></tbody>
  </table>
  <div
    class="modal fade"
    id="myThemeModal"
    tabindex="-1"
    role="dialog"
    aria-labelledby="exampleModalLabel"
    aria-hidden="true"
  >
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="exampleModalLabel">New theme</h5>
          <button
            type="button"
            class="close"
            data-dismiss="modal"
            aria-label="Close"
            id="closeThemeModal"
          >
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <form enctype="multipart/form-data" action="/themes" action="POST" id="add-theme">
        <div class="modal-body">
            <div class="form-group">
              <label for="recipient-name" class="col-form-label">Color:</label>
              <input type="color" name="color" class="form-control" id="themeColor"></input>
            </div>
            <div class="form-group">
              <label for="message-text" class="col-form-label"
                >Font name:</label
              >
              <input type="text" name="font_name" class="form-control" id="themeFontName"></input>
            </div>
            <div class="form-group">
              <label for="message-text" class="col-form-label"
                >Font size:</label
              >
              <input type="number" name="font_size" class="form-control" id="themeFontSize"></input>
            </div>
            <div class="form-group">
              <div>
                <label for="message-text" class="col-form-label">Background:</label>
                <img id="background-image" src="images/default.jpg" alt="image" width="100px" height="100px"/>
              </div>
              <input type="file" class="form-control" id="themeBackGround" name="background"></input>
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">
              Close
            </button>
            <button type="submit" class="btn btn-primary" id="addThemeButton">
              Add
            </button>
            <button type="submit" class="btn btn-primary" id="editThemeButton">
              Edit
            </button>
          </div>
        </form>
        </div>
    </div>
  </div>
</div>

<style>
  table {
    font-family: arial, sans-serif;
    border-collapse: collapse;
    width: 100%;
  }

  td,
  th {
    border: 1px solid #dddddd;
    text-align: left;
    padding: 8px;
  }

  tr:nth-child(even) {
    background-color: #dddddd;
  }
</style>

<script>
  $(document).ready(function () {
    $("#myThemeInput").on("keyup", function () {
      var value = $(this).val().toLowerCase();
      $("#myThemeTable tr").filter(function () {
        $(this).toggle($(this).text().toLowerCase().indexOf(value) > -1);
      });
    });
  });
  const addTheme = function () {
    color = $("#themeColor").val();
    font_name = $("#themeFontName").val();
    font_size = $("#themeFontSize").val();
    // background = $("#themeBackGround").val();
    const body = {
      color,
      font_name,
      font_size,
      // background
    }
    if (!(color && font_name && font_size)) {
      alert("Please fill all the fields");
      return;
    }
    var fd = new FormData();    
    fd.append( 'color', color);
    fd.append( 'font_name', font_name);
    fd.append( 'font_size', font_size);
    fd.append( 'background', $("#themeBackGround")[0].files[0]);

    // var formData = new FormData($('#formf'));

    $.ajax({
      type: "POST",
      url: `${url}/themes`,
      data: fd,
      processData: false,
      headers: { "Content-Type": "multipart/form-data; boundary=MyBoundary" },
      success: function (data, status) {
        if (status === "error") {
          alert("Error");
          return;
        }
        clickTheme();

        $("#closeThemeModal").click();
        $("#themeFontName").val("");
        $("#themeFontSize").val("");
        $("#themeBackGround").val("");
      },
      error: function(error) {
        console.log(error);
      }
    }
    );
  };
  const openThemeModal = function() {
    displayThemeButton("addThemeButton");
  }
  $("#add-theme").on('submit', function(e) {
    e.preventDefault(); // avoid to execute the actual submit of the form.
    $.ajax({
        type: editThemeId ? "PUT" : "POST",
        url: `${url}/themes/${editThemeId||''}`,
        data: new FormData(this), // serializes the form's elements.
        cache: false,
        contentType: false,
        processData: false,
        success: function(data) {
          editThemeId = undefined;
          $("#closeThemeModal").click();
          clickTheme();
        }
    });

});
</script>

